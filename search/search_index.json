{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Reverge is a red team focused, attack surface management framework</p>"},{"location":"#installation","title":"Installation","text":"<p>Goto Amazon Marketplace and deploy a reverge instance</p> <p>When configuring the security groups for the EC2 instance consider the following:</p> <ul> <li>Reverge web interface is running on port 80</li> <li>TLS certificate issuance using Letsencrypt requires port 443 open to the internet</li> <li>SSH port forwarding for a remote database is running on port 2222</li> </ul> <p> </p>"},{"location":"settings/certificates/","title":"Certificates","text":"<p>To enable TLS on the reverge web application, select the appropriate radio button. There are two supported methods, Let's Encrypt for automatic certificate generation or uploading custom generated TLS certificates.   For the Let's Encrypt option, enter the fully qualified domain name (FQDN) in the Domain Name field and click the   button.   For the Custom Certificates option, enter the fully qualified domain name (FQDN) in the Domain Name field. Next click the Browse button for the Private and Public Certificate fields and select the appropriate certificate file. Finally, click the   button.   If everything worked as expected, the Reverge server should soon be reachable on port 443 at the specified domain\u2014for example, https://reverge.io. If not, you can restart the process by clicking the  button.</p>"},{"location":"setup/database/","title":"Database","text":"<p>To configure the database for local or remote access, select the appropriate radio button. If an error has occurred during setup and you need to reset the database, click the Advanced drop down and select the Purge Local Database radio button. Click the Next button.   If Remote Database is selected, the following page will be displayed. This option allows for self-hosting a MySQL database rather than having it hosted on the reverge server. The page will provide a SSH private key and instructions on how to port forward the self-hosted MySQL database port to the reverge server. </p> <p>MySQL docker</p> <p>A compatible MySQL docker can be setup with the following command. This does not include persistent storage.</p> <pre><code>docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=\"password\" -e MYSQL_DATABASE=\"scan_data\" \\\n    -e MYSQL_USER=\"db_user\" -e MYSQL_PASSWORD=\"password\" mysql:latest\n</code></pre> <p> After the self-hosted MySQL is installed and configured, execute the provided SSH port forward command from the MySQL server to connect it to the reverge server. Be sure to replace REVERGE_IP_ADDRESS with the reverge server IP address.  <pre><code>ssh -i priv_key restricted_user@REVERGE_IP_ADDRESS -p22222 -N -R 3306:*:3306\n</code></pre>  Once the connection has been made, enter in the database connection information and click the Connect button.   After the database connection has been configured, the database schema needs to be loaded. On the next page, click the Migrate button to load the reverge database tables.   Once the reverge database tables have been loaded, a password needs to be provided for the admin user to complete setup. Enter a sufficiently complex password and click the Install button.   If everything worked as expected, the following login page should appear. Login with the admin username and the password provided in the previous step.  </p>"}]}