{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>reverge is a red team focused, attack surface management framework</p>"},{"location":"#installation","title":"Installation","text":"<p>Goto Amazon Marketplace and deploy a reverge instance</p> <p>When configuring the security groups for the EC2 instance consider the following:</p> <ul> <li>reverge web interface is running on port 80</li> <li>TLS certificate issuance using Letsencrypt requires port 443 open to the internet</li> <li>SSH port forwarding for a remote database is running on port 2222</li> </ul> <p> </p>"},{"location":"#secrets-manager","title":"Secrets Manager","text":"<p>reverge stores various sensitive third-party credentials used to interact with cloud services and other applications. By default, these credentials are encrypted with a key that is also stored in the database, offering minimal protection if the database is compromised. However, reverge offers the ability to utilize AWS Secrets Manager to store the encryption key separately, thereby providing an extra layer of security for the stored credentials.</p> <p>After setting up a reverge AWS instance, it is strongly recommended to create an AWS IAM role accompanied by a suitable permission policy. This setup will enable the creation and retrieval of the reverge encryption key. Once the role is created, attach it to the reverge EC2 instance.</p> <p>The following steps will walk you through setting up a IAM policy &amp; role and attaching it to the reverge EC2 instance.</p> <ol> <li>Login to the AWS console and navigate to Identity and Access Managament (IAM)</li> <li>Cick on Policies in the menu on the left of the screen</li> <li>Click the Create policy button  </li> <li>Click the JSON button in the Policy editor dialog  </li> <li> <p>Copy and paste the following JSON policy into the policy editor and click Next <pre><code>{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowCreateSecret\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"secretsmanager:CreateSecret\"\n            ],\n            \"Resource\": \"*\"\n        },\n        {\n            \"Sid\": \"AllowManageOwnSecrets\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"secretsmanager:DescribeSecret\",\n                \"secretsmanager:GetSecretValue\",\n                \"secretsmanager:UpdateSecret\",\n                \"secretsmanager:DeleteSecret\",\n                \"secretsmanager:ListSecretVersionIds\"\n            ],\n            \"Resource\": \"arn:aws:secretsmanager:*:*:secret:reverge_key*\"\n        }\n    ]\n}\n</code></pre></p> </li> <li> <p>Fill in the Policy name field, e.g. RevergeSMPolicy, in the Policy details dialog and click the Create policy button at the bottom of the screen.</p> </li> <li>Cick on Roles in the menu on the left of the screen</li> <li>Click the Create role button  </li> <li>Select the AWS service radio button (default) in the Trusted entity type dialog. Select EC2 in the Service or use case drop down input field in the Use case dialog. Click the Next button  </li> <li>Type in the name of the policy created in step 6 in the search field in the Permissions policies dialog. Click the checkbox beside the correct policy name in the policy table. Click the Next button  </li> <li>Fill in the Role name field in the Role details dialog and click the Create role button</li> <li>Navigate to EC2 in the AWS services menu</li> <li>Click on Instances in the menu on the left of the screen</li> <li>Click the checkbox beside the reverge server instance. Click the Actions drop down menu at the top of the page. Click Security -&gt; Modify IAM role </li> <li>Select the IAM role created in step 11 and click the Update IAM role <li>Congratulations! You have given the reverge server permission to use the AWS Secrets Manager</li>"},{"location":"settings/certificates/","title":"Certificates","text":"<p>To enable TLS on the reverge web application, select the appropriate radio button. There are two supported methods, Let's Encrypt for automatic certificate generation or uploading custom generated TLS certificates.  </p>"},{"location":"settings/certificates/#lets-encrypt","title":"Let's Encrypt","text":"<p>For the Let's Encrypt option, enter the fully qualified domain name (FQDN) in the Domain Name field and click the   button. If you do not have a DNS A record configured for the given domain and a firewall exception for port 443, this will fail. </p>"},{"location":"settings/certificates/#custom-certificates","title":"Custom Certificates","text":"<p>For the Custom Certificates option, enter the fully qualified domain name (FQDN) in the Domain Name field. Next click the Browse button for the Private and Public Certificate fields and select the appropriate certificate file. Finally, click the   button.  </p>"},{"location":"settings/certificates/#troubleshooting","title":"Troubleshooting","text":"<p>If everything worked as expected, the Reverge server should soon be reachable on port 443 at the specified domain\u2014for example, https://reverge.io. If not, you can restart the process by clicking the  button.</p>"},{"location":"settings/providers/","title":"Providers","text":"<p>Providers are infrastructure services that provide resources to reverge for instantiating collectors. The most common providers include cloud services like AWS and locally hosted virtualization platforms like Promox. A provider object contains the configuration details required to interact with these services, things like credentials. Setting up a provider is typically the initial step required to create a collector for performing scans through reverge.</p>"},{"location":"settings/providers/#add-provider","title":"Add Provider","text":"<p>To add a new provider to reverge click on the   button in the top right corner of the Providers dialog.   Next, populate the fields in the Add Provider dialog. For the virtualization providers, this will include an identifier for the VM image to use and the SSH user to be provisioned. Then, click Save.  </p>"},{"location":"settings/providers/#remove-provider","title":"Remove Provider","text":"<p>To remove a provider from reverge, select the checkbox to the left of the provider name in the Providers dialog and click on the   button in the top right corner.  </p>"},{"location":"settings/providers/#credential-management","title":"Credential Management","text":"<p>By default reverge does not securely store provider credentials in the database. To add additional protection to the credentials stored in the reverge database it is recommended to setup the proper roles and policies in AWS Secrets Manager. Once that has been completed, click the  button in the top right corner to enable the use of AWS Secrets Manager to encrypt and decrypt provider credentials.</p>"},{"location":"settings/users/","title":"Users","text":"<p>The Users menu on the Settings page can be used for typical user management operations. This includes adding and removing users, updating passwords, and setting their privileges. </p>"},{"location":"settings/users/#add-user","title":"Add User","text":"<p>To add a new user to reverge click on the   button in the top right corner of the Users dialog.   Next, fill out the Add User dialog by entering the new user's username and password, and selecting whether they should have administrator privileges. Then, click Save.  </p>"},{"location":"settings/users/#remove-user","title":"Remove User","text":"<p>To remove a user from reverge, select the checkbox to the left of the username in the Users dialog and click on the   button in the top right corner.  </p>"},{"location":"settings/users/#update-user-settings","title":"Update User Settings","text":"<p>To update an existing user's password or privileges, click on the user in the Users table. A Configuration dialog will be displayed with fields that can be updated for the user. Next click on the   button in the top right corner of the Configuration dialog.  </p>"},{"location":"setup/database/","title":"Database","text":"<p>To configure the database for local or remote access, select the appropriate radio button. If an error has occurred during setup and you need to reset the database, click the Advanced drop down and select the Purge Local Database radio button. Click the Next button.   If Remote Database is selected, the following page will be displayed. This option allows for self-hosting a MySQL database rather than having it hosted on the reverge server. The page will provide a SSH private key and instructions on how to port forward the self-hosted MySQL database port to the reverge server. </p> <p>MySQL docker</p> <p>A compatible MySQL docker can be setup with the following command. This does not include persistent storage.</p> <pre><code>docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=\"password\" -e MYSQL_DATABASE=\"scan_data\" \\\n    -e MYSQL_USER=\"db_user\" -e MYSQL_PASSWORD=\"password\" mysql:latest\n</code></pre> <p> After the self-hosted MySQL is installed and configured, execute the provided SSH port forward command from the MySQL server to connect it to the reverge server. Be sure to replace REVERGE_IP_ADDRESS with the reverge server IP address.  <pre><code>ssh -i priv_key restricted_user@REVERGE_IP_ADDRESS -p22222 -N -R 3306:*:3306\n</code></pre>  Once the connection has been made, enter in the database connection information and click the Connect button.   After the database connection has been configured, the database schema needs to be loaded. On the next page, click the Migrate button to load the reverge database tables.   Once the reverge database tables have been loaded, a password needs to be provided for the admin user to complete setup. Enter a sufficiently complex password and click the Install button.   If everything worked as expected, the following login page should appear. Login with the admin username and the password provided in the previous step.  </p>"}]}